// Docker-in-docker setup for lab environment
{
	"name": "Docker-in-Docker",
    "build": {
        "dockerfile": "Dockerfile",
        "context": ".."
    },
	"remoteUser": "vscode",
    "workspaceFolder": "/app",
    "workspaceMount": "source=${localWorkspaceFolder},target=/app,type=bind,consistency=delegated",
    "runArgs": ["-h","nyu", "--name", "lab-docker"],
    "remoteEnv": {
      "FLASK_DEBUG:": "True",
      "FLASK_APP": "wsgi:app",
      "PORT": "8080",
	  "GUNICORN_BIND": "0.0.0.0:8080"
    },
	"customizations": {
		"vscode": {
			"settings": {
				"cSpell.words": [
					"wsgi",
					"pytest",
					"pipenv",
					"Redis",
					"testdb"
				],
				"[python]": {
					"editor.defaultFormatter": "ms-python.black-formatter",
					"editor.formatOnSave": true
				},
				"git.mergeEditor": true,
				"markdown-preview-github-styles.colorTheme": "light",
				"makefile.extensionOutputFolder": "/tmp",
				"python.testing.unittestEnabled": false,
				"python.testing.pytestEnabled": true,			
				"python.testing.pytestArgs": [
					"tests"
				],
				"files.exclude": {
					"**/.git": true,
					"**/.DS_Store": true,
					"**/*.pyc": true,
					"**/__pycache__": true,
					"**/.pytest_cache": true
				}
			},
			"extensions": [
				"ms-python.python",
				"ms-python.vscode-pylance",
				"ms-python.pylint",
				"ms-python.flake8",
				"ms-python.black-formatter",
				"njpwerner.autodocstring",
				"wholroyd.jinja",
				"ms-vscode.makefile-tools",
				"yzhang.markdown-all-in-one",
				"DavidAnson.vscode-markdownlint",
				"bierner.github-markdown-preview",
				"bierner.markdown-preview-github-styles",
				"hnw.vscode-auto-open-markdown-preview",
				"tamasfe.even-better-toml",
				"donjayamanne.githistory",
				"GitHub.vscode-pull-request-github",
				"github.vscode-github-actions",
				"hbenl.vscode-test-explorer",
				"LittleFoxTeam.vscode-python-test-adapter",
				"redhat.vscode-yaml",
				"unjinjang.rest-api-client",
				"ms-azuretools.vscode-docker",
				"streetsidesoftware.code-spell-checker",
				"bbenoist.vagrant"
			]
		}
	},
	// "forwardPorts": [8000],
	"features": {
		"ghcr.io/devcontainers/features/docker-in-docker:2": {}
	},
	"postCreateCommand": "bash /app/.devcontainer/scripts/setup-lab.sh"
}